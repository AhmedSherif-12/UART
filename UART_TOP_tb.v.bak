`timescale 1ns/100ps
module UART_TOP_tb ();

reg CLK_tb;
reg RST_tb;
reg [7:0] P_DATA_tb;
reg       DATA_VALID_tb;
reg       PAR_EN_tb;
reg       PAR_TYP_tb;
wire       S_DATA_tb;
wire       BUSY_tb;


parameter clk_period=2.5;
reg [15:0] value;


//initial block 

initial

    begin
        $dumpfile("UART_TOP.vcd");
        $dumpvars;
        
        CLK_tb=1'b0;

        
        RST_tb=1'b1;
        #clk_period
        RST_tb=1'b0;
        #clk_period
        RST_tb=1'b1;
        //initialization
      	DATA_VALID_tb=1'b0;
      	PAR_EN_tb=1'b0;
        PAR_TYP_tb=1'b0;
      	P_DATA_tb=8'b0;
      
      //testing
      
        $display("Test case 1 :Parity enabled & Even");
      	#clk_period
        $monitor("[$monitor] S_data=%b,time=%t",S_DATA_tb,$time);
        P_DATA_tb=8'b1001010;
        $display("Data=%b",P_DATA_tb);
        DATA_VALID_tb=1'b1;
      #(clk_period*2)
      	DATA_VALID_tb=1'b0;
        value={value,S_DATA_tb};
        PAR_EN_tb=1'b1;
        PAR_TYP_tb=1'b0;
        #(clk_period*21)
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        #clk_period
        value={value,S_DATA_tb};
        $display("Frame=%16b",value);
      $finish;
        
        

     
    end

//instantiate
UART_TOP DUT(

.CLK(CLK_tb),
.RST(RST_tb),
.P_DATA(P_DATA_tb),
.DATA_VALID(DATA_VALID_tb),
.PAR_EN(PAR_EN_tb),
.PAR_TYP(PAR_TYP_tb),
.S_DATA(S_DATA_tb),
.BUSY(BUSY_tb)
);


//clock generator //5ns ==200Mhz
always #clk_period CLK_tb=~CLK_tb;


endmodule

